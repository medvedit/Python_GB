# =========================================================================== Домашняя работа к Семинару 1 ======================================================
# Задача №1 -------------------------------------------------------
# Напишите программу, которая на вход принимает цифру обозначающую день недели,
#  и проверяет, является ли этот день выходным.


import os
os.system('clear')


try:
    dey_week = float(input('Введите номер дня недели: '))

    if 5 < dey_week < 8:
        print('Выходной')
    elif 0 < dey_week < 6:
        print('Рабочий')
    else:
        print('В неделе семь дней! Введите число от 1 до 7')
except:
    print('К вводу принимаются только положительные, целые числа!!!')


# Задача №2 -------------------------------------------------------
# Напишите программу для проверки ложности утверждения
# (W ⋏ Z) ⋎ ¬Y ⋎ (¬X ≡ ¬W) для всех значений придекат.

print('x y z w')
for x in range(2):
    for y in range(2):
        for z in range(2):
            for w in range(2):
                if not ((w and z) or not y or (not x == (not w))):  # утверждение (W ⋏ Z) ⋎ ¬Y ⋎ (¬X ≡ ¬W) в задании соответствует утверждению (w and z) or not y or (not x == (not w)) в языке Python и
                    #                                                 работает для проверки истинности, но нам по заданию необходимо проверить ложность утверждения
                    #                                                 и по этому нам нужно развернуть утверждение. Для этого мы обернули в скобки и перед скобкой написали not.
                    print(x, y, z, w)

# Задача №3 -------------------------------------------------------------------
# Напишите программу, которая на вход принимает координаты точек (X и Y),
# причем X ≠ 0 и Y ≠ 0, и выдает номер четверти плоскости,
# в которых находится эта точка (или на какой оси она находится).
try:
    x = float(input('Введите координату (целое число) X =  '))
    y = float(input('Введите координату (целое число) Y =  '))

    if x > 0 and y > 0:
        print(1)
    elif x < 0 < y:
        print(2)
    elif x < 0 and y < 0:
        print(3)
    elif x > 0 > y:
        print(4)
    elif y < 0 or y > 0 and x == 0:
        print('Расположение на оси X')
    else:
        print('Расположение на оси Y')
except:
    print('Не корректный ввод, требуется целое число.')

# Задача №4
# Напишите программу, которая на вход принимает координаты двух точек и находит расстояние между ними в 2D пространстве.

try:
    # from math import * # библиотека для вычесления корня

    x_1 = float(input('Введите координату х1: '))
    x_2 = float(input('Введите координату х2: '))
    y_1 = float(input('Введите координату y1: '))
    y_2 = float(input('Введите координату y2: '))

    def distanc_between_points(x1, x2, y1, y2):
        # distanc = sqrt((y1 - x1) ** 2 + (y2 - x2) ** 2) # Вычисление корня с помощью библиотеки math
        distanc = ((y1 - x1) ** 2 + (y2 - x2) ** 2) ** 0.5
        return distanc

    print(f'Длинна отрезка = {distanc_between_points(x_1, x_2, y_1, y_2):0.4}')
except:
    print('Не корректный ввод, требуется число.')

# ================================================================================= Работа в классе =========================================================================================
# Задача №5 -----------------------------------------------
# Напишите программу, которая на вход принимает число N и выдает последовательность из N членов.
try:
    def n_func():
        for i in range(int(input('Введите целое число: '))):
            print((-3) ** i, end = ' ') # end = ' ' - это запрет перехода не следующую строку. Вывод в одной, через пробел.
        print()
    n_func()
except:
    print('Не корректный ввод. Требуется целое число.')

# Задача №6 -----------------------------------------------
# Создать список длины N, значения формируются по формуле 3k + 1 ,
# где k принимает значение от 1 до N включительно.


# Вариант 1 _____________________________
n = int(input('Введите длину списка: '))

def Length_N(x):
    length = range(1,x+1)
    result = list(length)

    for k in result:
        s = 3 * k + 1
        print(s, end=' ')
    print()

Length_N(n) # 4 7 10 13 16 19
print(type(n)) # <class 'int'>

# Вариант 2 ____________________________
n = int(input('Введите длину списка:'))
result = []
for k in range(1, n+1):
    result.append(3*k+1)
print(result) # [4, 7, 10]
print(type(result)) # <class 'list'>

# Задача №7 ---------------------------------------------------------
# Напишите программу, в которой пользователь будет задавать две строки,
# программа - определять количество вхождений одной строки в другой.

str_1 = input('Введите первую строку:') # gipopotampo
str_2 = input('Введите какое вождение нужно отыскать в первой строке,\n'
            ' а я выведу цифру, сколько раз это вхождение присутствует в первой строке:') # po

print(str_1.count(str_2)) # 3

a = input('Введите первую строку:') # giPOpopotame
b = input('Введите какое вождение нужно отыскать в первой строке,\n'
            ' а я выведу цифру, сколько раз это вхождение присутствует в первой строке:') # po
print(a.lower().count(b)) # 3

# Задача №8 ---------------------------------------------------------
# Напишите программу, которая на вход принимает вещественное число и
# показывает сумму его цифр. Без работы с методами строк.

# Вариант по условию задачи:________________
m = input('enter x: ')
n = len(m)
k = int(float(m)*10**(n-2))
print(k)
rez = 0
while k:
    rez = rez + k % 10
    k = k // 10
print(rez)

# Вариант через метод строк №1:________________
x = input('Введите число: ')
k = list(x.replace(".", ""))
sum = 0
for i in k:
    sum += int(i)
print(sum)

# Вариант через метод строк №2:__________________
print(sum(map(int, list(input('Введите число: ').replace(".", "")))))

# Задача №9 ---------------------------------------------------------
# Напишите программу, которая на вход принимает число N и и выдает произведение чисел от 1 до N в виде списка.
# 1 -> 1 * 1, 2 -> 1 * 2, 3 -> 1 * 2 * 3, 4 -> 1 * 2 * 3 * 4 и т.д. ...

num = int(input('Введите число: '))
final_sum = 1
num_list = []

for i in range(num):
    final_sum *= i + 1
    num_list.append(final_sum)

print(num_list)


# Задача №10 ---------------------------------------------------------
# Задайте список из N чисел, заполненный по формуле (1 + 1/N) ** N и выведите на экран их сумму.
n = int(input('Введите число N: '))
sum_n = 0
list_n = []

for i in range(1, n + 1):
    result = round((1 + 1 / i) ** i, 3)
    list_n.append(result)
    sum_n += result

print(list_n)
print(sum_n)


# Задача №11 ---------------------------------------------------------
# Напишите программу, которая на вход принимает два числа. Получите значение N, для пустого списка, заполните
# числами в диапазоне [- N, N]. Найдите произведение элементов на указанных позициях(не индексах).
x = int(input('Введите число N: '))
a = int(input('Введите позицию №1: '))
b = int(input('Введите позицию №2: '))
x_set = list(range(-x, x + 1))
print(x_set)

len_list = len(x_set)
print(len_list)

if len_list >= a > 0 and len_list >= b > 0:
    print(x_set[a - 1] * x_set[b - 1])
else:
    print('Для таких индексов нет значений!')


# Задача №12 ---------------------------------------------------------
# Реализуйте алгоритм перемешивания списка. Без функции shuffle random.
# in
# >> 10

# out
# >> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# >> [7, 4, 1, 8, 5, 2, 6, 3, 0, 9]

from random import randint, randrange # разрешено использовать
# randint(0, 10) # Выдергивает индексы в рендже от и до
# randrange(10) # Выдергивает индекс от 0 до 10

n = int(input('Введите число: '))
n_list = list(range(n))
print(n_list)

for i in range(n):
    n_1, n_2 = randrange(n), randrange(n)
    n_list[n_1], n_list[n_2] = n_list[n_2], n_list[n_1]

print(n_list)
