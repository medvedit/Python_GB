# Задача №17: ----------------------------------------------------------
# Дан список чисел. Определите, сколько в нем встречается различных чисел.

print()
a = 8
b = -3
c = 4
def Number_Array(x, min, max):
    import random
    m = []
    for i in range(0, x):
        random_number = round(random.randint(min, max))
        m.append(random_number)
    return m

d = (Number_Array(a, b, c))
# print(d)
# print()
f = set(d)
# print(f)
print(f'В списке {d} встречается {len(f)} различных чисел(а). Повторения исключены.')
print()


# Задача №19: -------------------------------------------------
# Дана последовательность из N целых чисел и число K.
# Необходимо сдвинуть всю последовательность (сдвиг - циклический) на K элементов вправо,
# K – положительное число.
# Input: [1, 2, 3, 4, 5] k = 2
# Output: [4, 5, 1, 2, 3]

# Вариант 1:
n = 2
m = [1, 2, 3, 4, 5]
print(m)
for i in range(0, n):
    m.insert(0, m[-1])
    m.pop(-1)

print(f'{m} -> сдвиг на {n} элемента(ов)')
print()

# Вариант 2:
a = int(input('Введите количество элементов в списке: '))
b = -10
c = 10

def Number_Array(x, min, max): # Создание рандомного списка по количеству элементов, min и max значения.
    import random
    m = []
    for i in range(0, x):
        random_number = round(random.randint(min, max))
        m.append(random_number)
    return m

s = Number_Array(a, b, c)
print(s)
g = int(input('Введите на сколько индексов сдигать >>> :'))

def Number_Of_Elements_Right_Shift(x, y): # Метод создания сдвига вправо на x - количество элементов, y - список list
    for i in range(x):
        temp = y.pop(-1)
        y.insert(0, temp)
    return y

print(Number_Of_Elements_Right_Shift(g, s))


# Задача №2: ---------------------------------------------------------
# Напишите программу для печати всех уникальных значений в словаре.
# Input:  {"I": "S001", "II": "S002", "III": "S001", "IV": "S005", "V": "S005", "VI":"S009", "VII": "S007"}]
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}
print()
dictionary = \
    {
       "I": "S001",
       "II": "S002",
       "III": "S001",
       "IV": "S005",
       "V": "S005",
       "VI":"S009",
       "VII": "S007"
    }
print(dictionary.values())
print(type(dictionary))
print()
dictionary_B = dictionary.values
print(set(dictionary_B()))

# Задача №23: -----------------------------------------------------
# Дан массив, состоящий из целых чисел. Напишите программу, которая подсчитает количество элементов массива, больших предыдущего (элемента с предыдущим номером)
# Input: [0, -1, 5, 2, 3]
# Output: 2

import os
os.system('clear')


f = [-1, 0, -1, 5, 2, 3, 10, 10, 5]
l = 0
for i in range(0, len(f)-1):
    if f[i] < f[i+1]:
        l += 1

print(f)
print()
print(l)

#================================================================================================= Домашнее задание ========================================================================================================

# Задача 16: ------------------------------------------------------------------
# Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
# Пользователь вводит натуральное число N – количество элементов в массиве и число, которое необходимо проверить - X.
# Заполните массив случайными натуральными числами от 1 до N/2.
# Выведите, сколько раз X встречается в массиве.
# Ввод: 5
# Ввод: 1
# 1 2 1 2 2
# Вывод: 2

import os
os.system('clear')

a = int(input('Введите количество элементов в списке: '))
b = 1
c = 3

def Random_List(x, min, max): # Создание рандомного списка по количеству элементов, min и max значения.
    import random
    m = []
    for i in range(0, x):
        random_number = round(random.randint(min, max))
        m.append(random_number)
    return m

array = Random_List(a, b, c)
print(array)

check_number = int(input('Введите число от 1 до 3: '))
count = 0

for i in range(0, len(array)):
    if array[i] == check_number:
        count += 1

print(count)


# Задача 18: -------------------------------------------------------------------
# Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
# Пользователь вводит натуральное число N – количество элементов в массиве и число,
# которое необходимо проверить - X.
# Заполните массив случайными натуральными числами от 1 до N.
# Выведите, ближайший к X элемент. Если есть несколько элементов,
# которые равноудалены от X, выведите наименьший по величине.
# Ввод: 10
# Ввод: 7
# 1 2 1 8 9 6 5 4 3 4
# Вывод: 6

a = int(input('Введите количество элементов в списке: '))
b = 1
c = 9

def Random_List(x, min, max): # Создание рандомного списка по количеству элементов, min и max значения.
    import random
    m = []
    for i in range(0, x):
        random_number = round(random.randint(min, max))
        m.append(random_number)
    return m

array = Random_List(a, b, c)
print(array)

number = int(input('Введите целое число: '))

def nearest_min_value(arr, value):
    result = arr[0]
    for i in arr:
        if abs(i - value) < abs(result - value):
            result = i
    return result
print(f'Ближайшее число к {number} в списке {array} является {nearest_min_value(array, number)}')


# Задача 20: ---------------------------------------------------
# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские,
# либо только русские буквы.
# Ввод: ноутбук
# Вывод: 12

# Вариант 1 -------------------------------------------
dictionary = \
{
'a':1, 'e':1, 'i':1, 'l':1, 'n':1, 'o':1, 'r':1, 's':1, 't':1, 'u':1,
'd':2, 'g':2,
'b':3, 'c':3, 'm':3, 'p':3,
'f':4, 'h':4, 'v':4, 'w':4, 'y':4,
'k':5,
'j':8, 'x':8,
'q':10, 'z':10,
'а':1, 'в':1, 'е':1, 'и':1, 'н':1, 'о':1, 'р':1, 'с':1, 'т':1,
'д':2, 'к':2, 'л':2, 'м':2, 'п':2, 'у':2,
'б':3, 'г':3, 'ё':3, 'ь':3, 'я':3,
'й':4, 'ы':4,
'ж':5, 'з':5, 'х':5, 'ц':5, 'ч':5,
'ш':8, 'э':8, 'ю':8,
'ф':10, 'щ':10, 'ъ':10
}

word = input('Введите слово -> ')
word = word.lower() # Все буквы в нижний регистр
result = 0
for i in word:
    result += dictionary[i]

print(f'Стоимость введенного вами слова: -> {result}')

# Вариант 2 --------------------------------------
points_en = {1: 'AEIOULNSTR', 2: 'DG', 3: 'BCMP', 4: 'FHVWY', 5: 'K', 8: 'JZ', 10: 'QZ'}
points_ru = {1: 'АВЕИНОРСТ', 2: 'ДКЛМПУ', 3: 'БГЁЬЯ', 4: 'ЙЫ', 5: 'ЖЗХЦЧ', 8: 'ШЭЮ', 10: 'ФЩЪ'}
word = input().upper()  # переводим все буквы в верхний регистр
count = 0
for i in word:
    if i in 'QWERTYUIOPASDFGHJKLZXCVBNM':
        for j in points_en:
            if i in points_en[j]:
                count = count + j
    else:
        for j in points_ru:
            if i in points_ru[j]:
                count = count + j
print(count)
